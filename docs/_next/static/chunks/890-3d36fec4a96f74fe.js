"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[890],{1117:function(t,e,i){i.d(e,{D:function(){return r}});var n,s,a=i(58681),c=i(40106),o=i(48756),h=i(75610),r=class extends o.wR{constructor({chains:t,options:e}){super({chains:t,options:{reloadOnDisconnect:!1,...e}}),(0,o.ov)(this,"id","coinbaseWallet"),(0,o.ov)(this,"name","Coinbase Wallet"),(0,o.ov)(this,"ready",!0),(0,o.Ko)(this,n,void 0),(0,o.Ko)(this,s,void 0),(0,o.ov)(this,"onAccountsChanged",t=>{0===t.length?this.emit("disconnect"):this.emit("change",{account:(0,h.Kn9)(t[0])})}),(0,o.ov)(this,"onChainChanged",t=>{let e=(0,c.J)(t),i=this.isChainUnsupported(e);this.emit("change",{chain:{id:e,unsupported:i}})}),(0,o.ov)(this,"onDisconnect",()=>{this.emit("disconnect")})}async connect({chainId:t}={}){try{let e=await this.getProvider();e.on("accountsChanged",this.onAccountsChanged),e.on("chainChanged",this.onChainChanged),e.on("disconnect",this.onDisconnect),this.emit("message",{type:"connecting"});let i=await e.enable(),n=(0,h.Kn9)(i[0]),s=await this.getChainId(),a=this.isChainUnsupported(s);if(t&&s!==t){let e=await this.switchChain(t);s=e.id,a=this.isChainUnsupported(s)}return{account:n,chain:{id:s,unsupported:a}}}catch(t){if(/(user closed modal|accounts received is empty)/i.test(t.message))throw new h.abR(t);throw t}}async disconnect(){if(!(0,o.ac)(this,s))return;let t=await this.getProvider();t.removeListener("accountsChanged",this.onAccountsChanged),t.removeListener("chainChanged",this.onChainChanged),t.removeListener("disconnect",this.onDisconnect),t.disconnect(),t.close()}async getAccount(){let t=await this.getProvider();return(0,h.Kn9)((await t.request({method:"eth_accounts"}))[0])}async getChainId(){let t=await this.getProvider(),e=(0,c.J)(t.chainId);return e}async getProvider(){if(!(0,o.ac)(this,s)){let t=(await Promise.all([i.e(295),i.e(775),i.e(439)]).then(i.t.bind(i,64775,19))).default;"function"!=typeof t&&"function"==typeof t.default&&(t=t.default),(0,o.qx)(this,n,new t(this.options));let e=o.ac(this,n).walletExtension?.getChainId(),a=this.chains.find(t=>this.options.chainId?t.id===this.options.chainId:t.id===e)||this.chains[0],c=this.options.chainId||a?.id,h=this.options.jsonRpcUrl||a?.rpcUrls.default.http[0];(0,o.qx)(this,s,(0,o.ac)(this,n).makeWeb3Provider(h,c))}return(0,o.ac)(this,s)}async getWalletClient({chainId:t}={}){let[e,i]=await Promise.all([this.getProvider(),this.getAccount()]),n=this.chains.find(e=>e.id===t);if(!e)throw Error("provider is required.");return(0,h.Kwp)({account:i,chain:n,transport:(0,h.PGm)(e)})}async isAuthorized(){try{let t=await this.getAccount();return!!t}catch{return!1}}async switchChain(t){let e=await this.getProvider(),i=(0,h.eCs)(t);try{return await e.request({method:"wallet_switchEthereumChain",params:[{chainId:i}]}),this.chains.find(e=>e.id===t)??{id:t,name:`Chain ${i}`,network:`${i}`,nativeCurrency:{name:"Ether",decimals:18,symbol:"ETH"},rpcUrls:{default:{http:[""]},public:{http:[""]}}}}catch(s){let n=this.chains.find(e=>e.id===t);if(!n)throw new a.B({chainId:t,connectorId:this.id});if(4902===s.code)try{return await e.request({method:"wallet_addEthereumChain",params:[{chainId:i,chainName:n.name,nativeCurrency:n.nativeCurrency,rpcUrls:[n.rpcUrls.public?.http[0]??""],blockExplorerUrls:this.getBlockExplorerUrls(n)}]}),n}catch(t){throw new h.abR(t)}throw new h.x3p(s)}}async watchAsset({address:t,decimals:e=18,image:i,symbol:n}){let s=await this.getProvider();return s.request({method:"wallet_watchAsset",params:{type:"ERC20",options:{address:t,decimals:e,image:i,symbol:n}}})}};n=new WeakMap,s=new WeakMap},92486:function(t,e,i){i.d(e,{i:function(){return h}});var n,s=i(83919),a=i(58681),c=i(48756),o=i(75610),h=class extends s._{constructor({chains:t,options:e}={}){let i={name:"MetaMask",shimDisconnect:!0,getProvider(){function t(t){let e=!!t?.isMetaMask;if(e&&(!t.isBraveWallet||t._events||t._state)&&!t.isApexWallet&&!t.isAvalanche&&!t.isBitKeep&&!t.isBlockWallet&&!t.isCoin98&&!t.isFordefi&&!t.isMathWallet&&!t.isOkxWallet&&!t.isOKExWallet&&!t.isOneInchIOSWallet&&!t.isOneInchAndroidWallet&&!t.isOpera&&!t.isPortal&&!t.isRabby&&!t.isDefiant&&!t.isTokenPocket&&!t.isTokenary&&!t.isZerion)return t}if("undefined"==typeof window)return;let e=window.ethereum;return e?.providers?e.providers.find(t):t(e)},...e};super({chains:t,options:i}),(0,c.ov)(this,"id","metaMask"),(0,c.ov)(this,"shimDisconnectKey",`${this.id}.shimDisconnect`),(0,c.Ko)(this,n,void 0),(0,c.qx)(this,n,i.UNSTABLE_shimOnConnectSelectAccount)}async connect({chainId:t}={}){try{let e=await this.getProvider();if(!e)throw new a.N;e.on&&(e.on("accountsChanged",this.onAccountsChanged),e.on("chainChanged",this.onChainChanged),e.on("disconnect",this.onDisconnect)),this.emit("message",{type:"connecting"});let i=null;if((0,c.ac)(this,n)&&this.options?.shimDisconnect&&!this.storage?.getItem(this.shimDisconnectKey)){i=await this.getAccount().catch(()=>null);let t=!!i;if(t)try{await e.request({method:"wallet_requestPermissions",params:[{eth_accounts:{}}]}),i=await this.getAccount()}catch(t){if(this.isUserRejectedRequestError(t))throw new o.abR(t);if(t.code===new o.pTd(t).code)throw t}}if(!i){let t=await e.request({method:"eth_requestAccounts"});i=(0,o.Kn9)(t[0])}let s=await this.getChainId(),h=this.isChainUnsupported(s);if(t&&s!==t){let e=await this.switchChain(t);s=e.id,h=this.isChainUnsupported(s)}return this.options?.shimDisconnect&&this.storage?.setItem(this.shimDisconnectKey,!0),{account:i,chain:{id:s,unsupported:h},provider:e}}catch(t){if(this.isUserRejectedRequestError(t))throw new o.abR(t);if(-32002===t.code)throw new o.pTd(t);throw t}}};n=new WeakMap},9253:function(t,e,i){i.d(e,{I:function(){return n}});function n(){return function(t){return t.rpcUrls.public.http[0]?{chain:t,rpcUrls:t.rpcUrls.public}:null}}},93836:function(t,e,i){i.d(e,{RJ:function(){return n}});var n={id:1,network:"homestead",name:"Ethereum",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpcUrls:{alchemy:{http:["https://eth-mainnet.g.alchemy.com/v2"],webSocket:["wss://eth-mainnet.g.alchemy.com/v2"]},infura:{http:["https://mainnet.infura.io/v3"],webSocket:["wss://mainnet.infura.io/ws/v3"]},default:{http:["https://cloudflare-eth.com"]},public:{http:["https://cloudflare-eth.com"]}},blockExplorers:{etherscan:{name:"Etherscan",url:"https://etherscan.io"},default:{name:"Etherscan",url:"https://etherscan.io"}},contracts:{ensRegistry:{address:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"},ensUniversalResolver:{address:"0xc0497E381f536Be9ce14B0dD3817cBcAe57d2F62",blockCreated:16966585},multicall3:{address:"0xca11bde05977b3631167028862be2a173976ca11",blockCreated:14353601}}}}}]);